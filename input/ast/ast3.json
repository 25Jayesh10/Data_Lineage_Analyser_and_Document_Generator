{
  "tables": [
    {
      "table_name": "Inventory",
      "columns": [
        { "name": "ItemID", "type": "INT", "constraints": ["PRIMARY KEY"] },
        { "name": "ItemName", "type": "VARCHAR(100)" },
        { "name": "Quantity", "type": "INT" },
        { "name": "ReorderLevel", "type": "INT" },
        { "name": "LastUpdated", "type": "DATETIME", "default": "GETDATE()" }
      ]
    },
    {
      "table_name": "PurchaseOrders",
      "columns": [
        { "name": "POID", "type": "INT", "constraints": ["PRIMARY KEY"] },
        { "name": "ItemID", "type": "INT" },
        { "name": "Quantity", "type": "INT" },
        { "name": "OrderDate", "type": "DATETIME", "default": "GETDATE()" },
        { "name": "Status", "type": "VARCHAR(20)" }
      ]
    },
    {
      "table_name": "AuditTrail",
      "columns": [
        { "name": "AuditID", "type": "INT", "constraints": ["IDENTITY", "PRIMARY KEY"] },
        { "name": "EventType", "type": "VARCHAR(50)" },
        { "name": "Details", "type": "VARCHAR(200)" },
        { "name": "CreatedAt", "type": "DATETIME", "default": "GETDATE()" }
      ]
    }
  ],
  "procedures": [
    {
      "proc_name": "usp_WriteAudit",
      "params": [
        { "name": "@eventType", "type": "VARCHAR(50)" },
        { "name": "@details", "type": "VARCHAR(200)" }
      ],
      "return_type": null,
      "variables": [],
      "statements": [
        {
          "type": "INSERT",
          "table": "AuditTrail",
          "columns": ["EventType", "Details"],
          "values": ["@eventType", "@details"]
        }
      ]
    },
    {
      "proc_name": "usp_CreatePurchaseOrder",
      "params": [
        { "name": "@itemId", "type": "INT" },
        { "name": "@quantity", "type": "INT" }
      ],
      "return_type": null,
      "variables": [],
      "statements": [
        {
          "type": "INSERT",
          "table": "PurchaseOrders",
          "columns": ["ItemID", "Quantity", "Status"],
          "values": ["@itemId", "@quantity", "'OPEN'"]
        },
        {
          "type": "EXEC",
          "proc_name": "usp_WriteAudit",
          "args": [
            "'PURCHASE_ORDER'",
            "'PO created for Item ' + CONVERT(VARCHAR, @itemId) + ', Qty ' + CONVERT(VARCHAR, @quantity)"
          ]
        }
      ]
    },
    {
      "proc_name": "usp_ReorderInventory",
      "params": [
        { "name": "@itemId", "type": "INT" }
      ],
      "return_type": null,
      "variables": [
        { "name": "@qty", "type": "INT" },
        { "name": "@reorderLevel", "type": "INT" }
      ],
      "statements": [
        {
          "type": "SELECT",
          "assignments": [
            { "variable": "@qty", "expression": "Quantity" },
            { "variable": "@reorderLevel", "expression": "ReorderLevel" }
          ],
          "from": "Inventory",
          "where": "ItemID = @itemId"
        },
        {
          "type": "IF",
          "condition": "@qty < @reorderLevel",
          "then": [
            {
              "type": "EXEC",
              "proc_name": "usp_CreatePurchaseOrder",
              "args": ["@itemId", "(@reorderLevel - @qty)"]
            },
            {
              "type": "EXEC",
              "proc_name": "usp_WriteAudit",
              "args": [
                "'REORDER'",
                "'Item ' + CONVERT(VARCHAR, @itemId) + ' triggered reorder.'"
              ]
            }
          ],
          "else": [
            {
              "type": "EXEC",
              "proc_name": "usp_WriteAudit",
              "args": [
                "'REORDER_CHECK'",
                "'Item ' + CONVERT(VARCHAR, @itemId) + ' sufficient stock.'"
              ]
            }
          ]
        }
      ]
    },
    {
      "proc_name": "usp_ProcessInventoryUpdate",
      "params": [
        { "name": "@itemId", "type": "INT" },
        { "name": "@adjustment", "type": "INT" }
      ],
      "return_type": null,
      "variables": [],
      "statements": [
        {
          "type": "UPDATE",
          "table": "Inventory",
          "set": [
            { "column": "Quantity", "value": "Quantity + @adjustment" },
            { "column": "LastUpdated", "value": "GETDATE()" }
          ],
          "where": "ItemID = @itemId"
        },
        {
          "type": "EXEC",
          "proc_name": "usp_WriteAudit",
          "args": [
            "'INVENTORY_UPDATE'",
            "'Item ' + CONVERT(VARCHAR, @itemId) + ' adjusted by ' + CONVERT(VARCHAR, @adjustment)"
          ]
        },
        {
          "type": "EXEC",
          "proc_name": "usp_ReorderInventory",
          "args": ["@itemId"]
        }
      ]
    }
  ],
  "functions": [
    {
      "func_name": "fn_GetStockLevelWithAudit",
      "params": [
        { "name": "@itemId", "type": "INT" }
      ],
      "return_type": "INT",
      "variables": [{ "name": "@qty", "type": "INT" }],
      "statements": [
        {
          "type": "SELECT",
          "assignments": [
            { "variable": "@qty", "expression": "Quantity" }
          ],
          "from": "Inventory",
          "where": "ItemID = @itemId"
        },
        {
          "type": "EXEC",
          "proc_name": "usp_WriteAudit",
          "args": [
            "'FUNCTION_CALL'",
            "'fn_GetStockLevelWithAudit called for Item ' + CONVERT(VARCHAR, @itemId)"
          ]
        },
        { "type": "RETURN", "expression": "@qty" }
      ]
    },
    {
      "func_name": "fn_CheckStockHealth",
      "params": [{ "name": "@itemId", "type": "INT" }],
      "return_type": "VARCHAR(20)",
      "variables": [
        { "name": "@qty", "type": "INT" },
        { "name": "@status", "type": "VARCHAR(20)" }
      ],
      "statements": [
        {
          "type": "SET",
          "variable": "@qty",
          "value": "dbo.fn_GetStockLevelWithAudit(@itemId)"
        },
        {
          "type": "IF",
          "condition": "@qty < 10",
          "then": [
            { "type": "SET", "variable": "@status", "value": "'LOW'" },
            {
              "type": "EXEC",
              "proc_name": "usp_WriteAudit",
              "args": [
                "'STOCK_HEALTH'",
                "'Item ' + CONVERT(VARCHAR, @itemId) + ' flagged as LOW'"
              ]
            }
          ],
          "else": [
            { "type": "SET", "variable": "@status", "value": "'OK'" },
            {
              "type": "EXEC",
              "proc_name": "usp_WriteAudit",
              "args": [
                "'STOCK_HEALTH'",
                "'Item ' + CONVERT(VARCHAR, @itemId) + ' flagged as OK'"
              ]
            }
          ]
        },
        { "type": "RETURN", "expression": "@status" }
      ]
    },
    {
      "func_name": "fn_GetInventoryReport",
      "params": [{ "name": "@itemId", "type": "INT" }],
      "return_type": "VARCHAR(200)",
      "variables": [
        { "name": "@qty", "type": "INT" },
        { "name": "@health", "type": "VARCHAR(20)" },
        { "name": "@report", "type": "VARCHAR(200)" }
      ],
      "statements": [
        { "type": "SET", "variable": "@qty", "value": "dbo.fn_GetStockLevelWithAudit(@itemId)" },
        { "type": "SET", "variable": "@health", "value": "dbo.fn_CheckStockHealth(@itemId)" },
        {
          "type": "SET",
          "variable": "@report",
          "value": "'Item ' + CONVERT(VARCHAR, @itemId) + ' | Qty: ' + CONVERT(VARCHAR, @qty) + ' | Health: ' + @health"
        },
        {
          "type": "EXEC",
          "proc_name": "usp_WriteAudit",
          "args": [
            "'REPORT'",
            "'Report generated for Item ' + CONVERT(VARCHAR, @itemId)"
          ]
        },
        { "type": "RETURN", "expression": "@report" }
      ]
    }
  ],
  "triggers": [
    {
      "trigger_name": "trg_AfterInventoryUpdate",
      "table": "Inventory",
      "timing": "AFTER",
      "event": "UPDATE",
      "variables": [
        { "name": "@itemId", "type": "INT" },
        { "name": "@report", "type": "VARCHAR(200)" }
      ],
      "statements": [
        {
          "type": "SELECT",
          "assignments": [{ "variable": "@itemId", "expression": "ItemID" }],
          "from": "INSERTED"
        },
        { "type": "EXEC", "proc_name": "usp_ProcessInventoryUpdate", "args": ["@itemId", "0"] },
        { "type": "SET", "variable": "@report", "value": "dbo.fn_GetInventoryReport(@itemId)" },
        {
          "type": "EXEC",
          "proc_name": "usp_WriteAudit",
          "args": [
            "'TRIGGER'",
            "'Inventory updated for Item ' + CONVERT(VARCHAR, @itemId) + ' | ' + @report"
          ]
        }
      ]
    },
    {
      "trigger_name": "trg_AfterPurchaseOrderInsert",
      "table": "PurchaseOrders",
      "timing": "AFTER",
      "event": "INSERT",
      "variables": [
        { "name": "@itemId", "type": "INT" },
        { "name": "@qty", "type": "INT" },
        { "name": "@status", "type": "VARCHAR(20)" }
      ],
      "statements": [
        {
          "type": "SELECT",
          "assignments": [
            { "variable": "@itemId", "expression": "ItemID" },
            { "variable": "@qty", "expression": "Quantity" }
          ],
          "from": "INSERTED"
        },
        {
          "type": "EXEC",
          "proc_name": "usp_WriteAudit",
          "args": [
            "'PO_TRIGGER'",
            "'Trigger fired for new PO of Item ' + CONVERT(VARCHAR, @itemId) + ', Qty ' + CONVERT(VARCHAR, @qty)"
          ]
        },
        { "type": "SET", "variable": "@status", "value": "dbo.fn_CheckStockHealth(@itemId)" },
        {
          "type": "EXEC",
          "proc_name": "usp_WriteAudit",
          "args": [
            "'PO_TRIGGER_HEALTH'",
            "'Item ' + CONVERT(VARCHAR, @itemId) + ' health status in PO trigger: ' + @status"
          ]
        }
      ]
    }
  ]
}
