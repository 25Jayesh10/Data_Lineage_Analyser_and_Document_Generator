{
  "procedures": [
    {
      "proc_name": "AcmeERP.usp_CalculateFifoCost",
      "params": [
        {
          "name": "@ProductID",
        "type": "INT",
        "mode": "IN"
      },
      {
        "name": "@QuantityRequested",
        "type": "INT",
        "mode": "IN"
      }
    ],
    "return_type": "VOID",
    "variables": [],
    "statements": [
      {
        "type": "WITH_CTE",
        "cte_list": [
          {
            "name": "CTE_FIFO",
            "query": {
              "type": "SELECT",
              "columns": [
                "MovementID",
                "ProductID",
                "Quantity",
                "UnitCost",
                "SUM(Quantity) OVER (PARTITION BY ProductID ORDER BY MovementDate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS RunningTotal"
              ],
              "from": "AcmeERP.StockMovements",
              "where": {
                "op": "AND",
                "left": {
                  "op": "=",
                  "left": "ProductID",
                  "right": "@ProductID"
                },
                "right": {
                  "op": "=",
                  "left": "Direction",
                  "right": "'IN'"
                }
              }
            }
          }
        ],
        "main_query": {
          "type": "SELECT",
          "columns": [
            "AVG(UnitCost) AS FifoCostEstimate"
          ],
          "from": "CTE_FIFO",
          "where": {
            "op": "<=",
            "left": "RunningTotal",
            "right": "@QuantityRequested"
          }
        }
      }
    ]
  },
  {
      "proc_name": "sp_process_order",
      "params": [
        {
          "name": "@OrderID",
          "type": "INT",
          "mode": "IN"
        },
        {
          "name": "@Threshold",
          "type": "NUMERIC(10,2)",
          "mode": "IN"
        }
      ],
      "return_type": "VOID",
      "variables": [
        {
          "name": "@OrderTotal",
          "type": "NUMERIC(10,2)"
        },
        {
          "name": "@Status",
          "type": "VARCHAR(20)"
        }
      ],
      "statements": [
        {
          "type": "SELECT_INTO",
          "into_vars": [
            "@OrderTotal"
          ],
          "query": {
            "type": "SELECT",
            "columns": [
              "SUM(Amount)"
            ],
            "from": "OrderItems",
            "where": {
              "op": "=",
              "left": "OrderID",
              "right": "@OrderID"
            }
          }
        },
        {
          "type": "IF",
          "condition": {
            "op": "IS NULL",
            "left": "@OrderTotal",
            "right": null
          },
          "then": [
            {
              "type": "SET",
              "name": "@Status",
              "value": "'Order Not Found'"
            }
          ],
          "else": [
            {
              "type": "IF",
              "condition": {
                "op": ">=",
                "left": "@OrderTotal",
                "right": "@Threshold"
              },
              "then": [
                {
                  "type": "SET",
                  "name": "@Status",
                  "value": "'High Value'"
                }
              ],
              "else": [
                {
                  "type": "SET",
                  "name": "@Status",
                  "value": "'Normal'"
                }
              ]
            }
          ]
        },
        {
          "type": "INSERT",
          "table": "OrderAudit",
          "columns": [
            "OrderID",
            "Status",
            "CheckedAt"
          ],
          "values": [
            "@OrderID",
            "@Status",
            {
                "op": "FUNCTION_CALL",
                "left": "GETDATE",
                "right": []
            }
          ]
        },
        {
          "type": "SELECT",
          "columns": [
            "@OrderID AS OrderID",
            "@OrderTotal AS Total",
            "@Status AS Status"
          ]
        }
      ]
    },
    {
      "proc_name": "sp_print_customer_orders",
      "params": [
        {
          "name": "@CustomerID",
          "type": "INT",
          "mode": "IN"
        }
      ],
      "return_type": "VOID",
      "variables": [
        {
          "name": "@OrderID",
          "type": "INT"
        },
        {
          "name": "@OrderDate",
          "type": "DATETIME"
        },
        {
          "name": "@Total",
          "type": "NUMERIC(10,2)"
        }
      ],
      "statements": [
        {
          "type": "DECLARE_CURSOR",
          "cursor_name": "order_cursor",
          "select_statement": {
            "type": "SELECT",
            "columns": [
              "OrderID",
              "OrderDate",
              "Total"
            ],
            "from": "Orders",
            "where": {
              "op": "=",
              "left": "CustomerID",
              "right": "@CustomerID"
            }
          }
        },
        {
          "type": "OPEN_CURSOR",
          "cursor_name": "order_cursor"
        },
        {
          "type": "FETCH_CURSOR",
          "cursor_name": "order_cursor",
          "fetch_into": [
            "@OrderID",
            "@OrderDate",
            "@Total"
          ]
        },
        {
          "type": "WHILE",
          "condition": {
            "op": "=",
            "left": "@@FETCH_STATUS",
            "right": "0"
          },
          "body": [
            {
              "type": "RAW_SQL",
              "query": "PRINT 'Order: ' + CAST(@OrderID AS VARCHAR) + ', Date: ' + CAST(@OrderDate AS VARCHAR) + ', Total: ' + CAST(@Total AS VARCHAR)"
            },
            {
              "type": "FETCH_CURSOR",
              "cursor_name": "order_cursor",
              "fetch_into": [
                "@OrderID",
                "@OrderDate",
                "@Total"
              ]
            }
          ]
        },
        {
          "type": "CLOSE_CURSOR",
          "cursor_name": "order_cursor"
        },
        {
          "type": "DEALLOCATE_CURSOR",
          "cursor_name": "order_cursor"
        }
      ]
    },
    {
      "proc_name": "sp_calculate_bonus",
      "params": [
        {
          "name": "@EmployeeID",
          "type": "INT",
          "mode": "IN"
        },
        {
          "name": "@Year",
          "type": "INT",
          "mode": "IN"
        }
      ],
      "return_type": "NUMERIC",
      "variables": [
        {
          "name": "@Sales",
          "type": "NUMERIC(12,2)"
        },
        {
          "name": "@Bonus",
          "type": "NUMERIC(12,2)"
        }
      ],
      "statements": [
        {
          "type": "SELECT_INTO",
          "into_vars": [
            "@Sales"
          ],
          "query": {
            "type": "SELECT",
            "columns": [
              "SUM(Amount)"
            ],
            "from": "Sales",
            "where": {
              "op": "AND",
              "left": {
                "op": "=",
                "left": "EmployeeID",
                "right": "@EmployeeID"
              },
              "right": {
                "op": "=",
                "left": "YEAR(SaleDate)",
                "right": "@Year"
              }
            }
          }
        },
        {
          "type": "IF",
          "condition": {
            "op": "IS NULL",
            "left": "@Sales",
            "right": null
          },
          "then": [
            {
              "type": "RAISERROR",
              "message": "'No sales found for employee'",
              "level": 16,
              "state": 1
            },
            {
              "type": "RETURN",
              "expression": "0"
            }
          ],
          "else": [
            {
              "type": "IF",
              "condition": {
                "op": ">",
                "left": "@Sales",
                "right": "100000"
              },
              "then": [
                {
                  "type": "SET",
                  "name": "@Bonus",
                  "value": {
                    "op": "*",
                    "left": "@Sales",
                    "right": "0.10"
                  }
                }
              ],
              "else": [
                {
                  "type": "IF",
                  "condition": {
                    "op": ">",
                    "left": "@Sales",
                    "right": "50000"
                  },
                  "then": [
                    {
                      "type": "SET",
                      "name": "@Bonus",
                      "value": {
                        "op": "*",
                        "left": "@Sales",
                        "right": "0.05"
                      }
                    }
                  ],
                  "else": [
                    {
                      "type": "SET",
                      "name": "@Bonus",
                      "value": "0"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "RETURN",
          "expression": "@Bonus"
        }
      ]
    }
  ],
  "functions": [],
  "triggers": []
}
