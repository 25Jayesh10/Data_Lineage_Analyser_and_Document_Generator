{
  "procedures": [
    {
      "proc_name": "usp_WriteAudit",
      "params": [
        {
          "name": "@eventType",
          "type": "VARCHAR(50)",
          "mode": "IN"
        },
        {
          "name": "@details",
          "type": "VARCHAR(200)",
          "mode": "IN"
        }
      ],
      "return_type": "VOID",
      "variables": [],
      "statements": [
        {
          "type": "INSERT",
          "table": "AuditTrail",
          "columns": [
            "EventType",
            "Details"
          ],
          "values": [
            "@eventType",
            "@details"
          ]
        }
      ]
    },
    {
      "proc_name": "usp_CreatePurchaseOrder",
      "params": [
        {
          "name": "@itemId",
          "type": "INT",
          "mode": "IN"
        },
        {
          "name": "@quantity",
          "type": "INT",
          "mode": "IN"
        }
      ],
      "return_type": "VOID",
      "variables": [],
      "statements": [
        {
          "type": "INSERT",
          "table": "PurchaseOrders",
          "columns": [
            "ItemID",
            "Quantity",
            "Status"
          ],
          "values": [
            "@itemId",
            "@quantity",
            "'OPEN'"
          ]
        },
        {
          "type": "EXECUTE_PROCEDURE",
          "name": "usp_WriteAudit",
          "args": [
            "'PURCHASE_ORDER'",
            "'PO created for Item ' + CONVERT(VARCHAR, @itemId) + ', Qty ' + CONVERT(VARCHAR, @quantity)"
          ]
        }
      ]
    },
    {
      "proc_name": "usp_ReorderInventory",
      "params": [
        {
          "name": "@itemId",
          "type": "INT",
          "mode": "IN"
        }
      ],
      "return_type": "VOID",
      "variables": [
        {
          "name": "@qty",
          "type": "INT"
        },
        {
          "name": "@reorderLevel",
          "type": "INT"
        }
      ],
      "statements": [
        {
          "type": "SELECT_INTO",
          "into_vars": [
            "@qty",
            "@reorderLevel"
          ],
          "query": {
            "type": "SELECT",
            "columns": [
              "Quantity",
              "ReorderLevel"
            ],
            "from": "Inventory",
            "where": {
              "op": "=",
              "left": "ItemID",
              "right": "@itemId"
            }
          }
        },
        {
          "type": "IF",
          "condition": {
            "op": "<",
            "left": "@qty",
            "right": "@reorderLevel"
          },
          "then": [
            {
              "type": "EXECUTE_PROCEDURE",
              "name": "usp_CreatePurchaseOrder",
              "args": [
                "@itemId",
                "(@reorderLevel - @qty)"
              ]
            },
            {
              "type": "EXECUTE_PROCEDURE",
              "name": "usp_WriteAudit",
              "args": [
                "'REORDER'",
                "'Item ' + CONVERT(VARCHAR, @itemId) + ' triggered reorder.'"
              ]
            }
          ],
          "else": [
            {
              "type": "EXECUTE_PROCEDURE",
              "name": "usp_WriteAudit",
              "args": [
                "'REORDER_CHECK'",
                "'Item ' + CONVERT(VARCHAR, @itemId) + ' sufficient stock.'"
              ]
            }
          ]
        }
      ]
    },
    {
      "proc_name": "usp_ProcessInventoryUpdate",
      "params": [
        {
          "name": "@itemId",
          "type": "INT",
          "mode": "IN"
        },
        {
          "name": "@adjustment",
          "type": "INT",
          "mode": "IN"
        }
      ],
      "return_type": "VOID",
      "variables": [],
      "statements": [
        {
          "type": "UPDATE",
          "table": "Inventory",
          "set": {
            "Quantity": "Quantity + @adjustment",
            "LastUpdated": "GETDATE()"
          },
          "where": {
            "op": "=",
            "left": "ItemID",
            "right": "@itemId"
          }
        },
        {
          "type": "EXECUTE_PROCEDURE",
          "name": "usp_WriteAudit",
          "args": [
            "'INVENTORY_UPDATE'",
            "'Item ' + CONVERT(VARCHAR, @itemId) + ' adjusted by ' + CONVERT(VARCHAR, @adjustment)"
          ]
        },
        {
          "type": "EXECUTE_PROCEDURE",
          "name": "usp_ReorderInventory",
          "args": [
            "@itemId"
          ]
        }
      ]
    }
  ],
  "functions": [
    {
      "func_name": "fn_GetStockLevelWithAudit",
      "params": [
        {
          "name": "@itemId",
          "type": "INT",
          "mode": "IN"
        }
      ],
      "return_type": "INT",
      "variables": [
        {
          "name": "@qty",
          "type": "INT"
        }
      ],
      "statements": [
        {
          "type": "SELECT_INTO",
          "into_vars": [
            "@qty"
          ],
          "query": {
            "type": "SELECT",
            "columns": [
              "Quantity"
            ],
            "from": "Inventory",
            "where": {
              "op": "=",
              "left": "ItemID",
              "right": "@itemId"
            }
          }
        },
        {
          "type": "EXECUTE_PROCEDURE",
          "name": "usp_WriteAudit",
          "args": [
            "'FUNCTION_CALL'",
            "'fn_GetStockLevelWithAudit called for Item ' + CONVERT(VARCHAR, @itemId)"
          ]
        },
        {
          "type": "RETURN",
          "value": "@qty"
        }
      ]
    },
    {
      "func_name": "fn_CheckStockHealth",
      "params": [
        {
          "name": "@itemId",
          "type": "INT",
          "mode": "IN"
        }
      ],
      "return_type": "VARCHAR(20)",
      "variables": [
        {
          "name": "@qty",
          "type": "INT"
        },
        {
          "name": "@status",
          "type": "VARCHAR(20)"
        }
      ],
      "statements": [
        {
          "type": "SET",
          "name": "@qty",
          "value": "dbo.fn_GetStockLevelWithAudit(@itemId)"
        },
        {
          "type": "IF",
          "condition": {
            "op": "<",
            "left": "@qty",
            "right": "10"
          },
          "then": [
            {
              "type": "SET",
              "name": "@status",
              "value": "'LOW'"
            },
            {
              "type": "EXECUTE_PROCEDURE",
              "name": "usp_WriteAudit",
              "args": [
                "'STOCK_HEALTH'",
                "'Item ' + CONVERT(VARCHAR, @itemId) + ' flagged as LOW'"
              ]
            }
          ],
          "else": [
            {
              "type": "SET",
              "name": "@status",
              "value": "'OK'"
            },
            {
              "type": "EXECUTE_PROCEDURE",
              "name": "usp_WriteAudit",
              "args": [
                "'STOCK_HEALTH'",
                "'Item ' + CONVERT(VARCHAR, @itemId) + ' flagged as OK'"
              ]
            }
          ]
        },
        {
          "type": "RETURN",
          "value": "@status"
        }
      ]
    },
    {
      "func_name": "fn_GetInventoryReport",
      "params": [
        {
          "name": "@itemId",
          "type": "INT",
          "mode": "IN"
        }
      ],
      "return_type": "VARCHAR(200)",
      "variables": [
        {
          "name": "@qty",
          "type": "INT"
        },
        {
          "name": "@health",
          "type": "VARCHAR(20)"
        },
        {
          "name": "@report",
          "type": "VARCHAR(200)"
        }
      ],
      "statements": [
        {
          "type": "SET",
          "name": "@qty",
          "value": "dbo.fn_GetStockLevelWithAudit(@itemId)"
        },
        {
          "type": "SET",
          "name": "@health",
          "value": "dbo.fn_CheckStockHealth(@itemId)"
        },
        {
          "type": "SET",
          "name": "@report",
          "value": "'Item ' + CONVERT(VARCHAR, @itemId) + ' | Qty: ' + CONVERT(VARCHAR, @qty) + ' | Health: ' + @health"
        },
        {
          "type": "EXECUTE_PROCEDURE",
          "name": "usp_WriteAudit",
          "args": [
            "'REPORT'",
            "'Report generated for Item ' + CONVERT(VARCHAR, @itemId)"
          ]
        },
        {
          "type": "RETURN",
          "value": "@report"
        }
      ]
    }
  ],
  "triggers": [
    {
      "trigger_name": "trg_AfterInventoryUpdate",
      "on_table": "Inventory",
      "event": "AFTER UPDATE",
      "statements": [
        {
          "type": "DECLARE",
          "name": "@itemId",
          "value": "INT"
        },
        {
          "type": "DECLARE",
          "name": "@report",
          "value": "VARCHAR(200)"
        },
        {
          "type": "SELECT_INTO",
          "into_vars": [
            "@itemId"
          ],
          "query": {
            "type": "SELECT",
            "columns": [
              "ItemID"
            ],
            "from": "INSERTED"
          }
        },
        {
          "type": "EXECUTE_PROCEDURE",
          "name": "usp_ProcessInventoryUpdate",
          "args": [
            "@itemId",
            "0"
          ]
        },
        {
          "type": "SET",
          "name": "@report",
          "value": "dbo.fn_GetInventoryReport(@itemId)"
        },
        {
          "type": "EXECUTE_PROCEDURE",
          "name": "usp_WriteAudit",
          "args": [
            "'TRIGGER'",
            "'Inventory updated for Item ' + CONVERT(VARCHAR, @itemId) + ' | ' + @report"
          ]
        }
      ]
    },
    {
      "trigger_name": "trg_AfterPurchaseOrderInsert",
      "on_table": "PurchaseOrders",
      "event": "AFTER INSERT",
      "statements": [
        {
          "type": "DECLARE",
          "name": "@itemId",
          "value": "INT"
        },
        {
          "type": "DECLARE",
          "name": "@qty",
          "value": "INT"
        },
        {
          "type": "SELECT_INTO",
          "into_vars": [
            "@itemId",
            "@qty"
          ],
          "query": {
            "type": "SELECT",
            "columns": [
              "ItemID",
              "Quantity"
            ],
            "from": "INSERTED"
          }
        },
        {
          "type": "EXECUTE_PROCEDURE",
          "name": "usp_WriteAudit",
          "args": [
            "'PO_TRIGGER'",
            "'Trigger fired for new PO of Item ' + CONVERT(VARCHAR, @itemId) + ', Qty ' + CONVERT(VARCHAR, @qty)"
          ]
        },
        {
          "type": "DECLARE",
          "name": "@status",
          "value": "VARCHAR(20)"
        },
        {
          "type": "SET",
          "name": "@status",
          "value": "dbo.fn_CheckStockHealth(@itemId)"
        },
        {
          "type": "EXECUTE_PROCEDURE",
          "name": "usp_WriteAudit",
          "args": [
            "'PO_TRIGGER_HEALTH'",
            "'Item ' + CONVERT(VARCHAR, @itemId) + ' health status in PO trigger: ' + @status"
          ]
        }
      ]
    }
  ]
}

